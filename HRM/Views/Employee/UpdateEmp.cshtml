@model HRM.Models.EmployeeCVModel

@{
    ViewBag.Title = "UpdateEmp";
}

<h2>UpdateEmp</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>EmployeeCVModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @foreach (System.Data.DataRow item in ViewBag.emp.Rows)
    {
        @Html.HiddenFor(model => model.EmpID)
        <div class="form-group">
            @Html.LabelFor(model => model.VLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.EditorFor(model => model.VLastName, new { htmlAttributes = new { @class = "form-control", @Value = item["VLastName"] } })
                @Html.ValidationMessageFor(model => item["VLastName"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VFirstName, new { htmlAttributes = new { @class = "form-control", @Value = item["VFirstName"] } })
                @Html.ValidationMessageFor(model => @item["VFirstName"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control", @Value = item["NickName"] } })
                @Html.ValidationMessageFor(model => item["NickName"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @Value = item["DOB"] } })
                @Html.ValidationMessageFor(model => @item["DOB"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control", @Value = item["Gender"] } })
                @Html.ValidationMessageFor(model => @item["Gender"], "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @Value = item["Email"] } })
                @Html.ValidationMessageFor(model => @item["Email"], "", new { @class = "text-danger" })
            </div>
        </div>
    }




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "GetAllEmp")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
